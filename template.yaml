---
# Source: kubefirst-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: release-name-kubefirst-api
  namespace: development
  labels:
    helm.sh/chart: kubefirst-api-0.94.0
    app.kubernetes.io/name: kubefirst-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubefirst-api/templates/cluster-role-binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubefirst-api-clusterrole
  annotations:
    argocd.argoproj.io/sync-wave: '0'
subjects:
  - kind: ServiceAccount
    name: kubefirst-kubefirst-api
    namespace: kubefirst
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubefirst-api/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-kubefirst-api
  namespace: development
  labels:
    helm.sh/chart: kubefirst-api-0.94.0
    app.kubernetes.io/name: kubefirst-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "list"
      - "watch"
---
# Source: kubefirst-api/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kubefirst-api
  namespace: development
  labels:
    helm.sh/chart: kubefirst-api-0.94.0
    app.kubernetes.io/name: kubefirst-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kubefirst-api
subjects:
  - kind: ServiceAccount
    name: release-name-kubefirst-api
    namespace: development
---
# Source: kubefirst-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubefirst-api
  namespace: development
  labels:
    helm.sh/chart: kubefirst-api-0.94.0
    app.kubernetes.io/name: kubefirst-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubefirst-api
    app.kubernetes.io/instance: release-name
---
# Source: kubefirst-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubefirst-api
  namespace: development
  labels:
    helm.sh/chart: kubefirst-api-0.94.0
    app.kubernetes.io/name: kubefirst-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubefirst-api
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubefirst-api
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kubefirst-api
      securityContext:
        {}
      containers:
        - name: kubefirst-api
          env:
            - name: K1_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: kubefirst-initial-secrets
                  key: K1_ACCESS_TOKEN
            - name: IN_CLUSTER
              value: "true"
            - name: CLOUD_PROVIDER
              value: unset
            - name: CLUSTER_ID
              value: "ZQe1xR"
            - name: CLUSTER_TYPE
              value: "bootstrap"
            - name: DOMAIN_NAME
              value: unset
            - name: GIT_PROVIDER
              value: unset
            - name: INSTALL_METHOD
              value: "helm"
            - name: KUBEFIRST_CLIENT
              value: api # deprecated
            - name: KUBEFIRST_TEAM
              value: "false"
            - name: KUBEFIRST_TEAM_INFO
              value: ""
            - name: KUBEFIRST_VERSION
              value: unset
            - name: PARENT_CLUSTER_ID
              value: "ZQe1xR"
            - name: USE_TELEMETRY
              value: "true"
            - name: IS_CLUSTER_ZERO
              value: "true" #internal use
          securityContext:
            {}
          image: "public.ecr.aws/kubefirst/kubefirst-api:1.16.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 30
          resources:
            {}
---
# Source: kubefirst-api/templates/deployment.yaml
---
---
# Source: kubefirst-api/templates/create-secret-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubefirst-api-bootstrap
  namespace: development
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
---
# Source: kubefirst-api/templates/create-secret-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-kubefirst-api-bootstrap
  namespace: development
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - list
      - get
---
# Source: kubefirst-api/templates/create-secret-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kubefirst-api-bootstrap
  namespace: development
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kubefirst-api-bootstrap
subjects:
  - kind: ServiceAccount
    name: release-name-kubefirst-api-bootstrap
    namespace: development
---
# Source: kubefirst-api/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-kubefirst-api-test-connection"
  namespace: development
  labels:
    helm.sh/chart: kubefirst-api-0.94.0
    app.kubernetes.io/name: kubefirst-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-kubefirst-api:80']
  restartPolicy: Never
---
# Source: kubefirst-api/templates/create-secret-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-kubefirst-api-bootstrap
  namespace: development
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      containers:
        - args:
            - create-k8s-secret
            - --namespace
            - development
            - --name
            - kubefirst-initial-secrets
          securityContext:
            {}
          image: public.ecr.aws/kubefirst/kubernetes-toolkit:0.1.3
          imagePullPolicy: IfNotPresent
          name: release-name-kubefirst-api-bootstrap
      restartPolicy: OnFailure
      serviceAccountName: release-name-kubefirst-api-bootstrap
---
# Source: kubefirst-api/templates/deployment.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-kubefirst-api-pi-hook
  namespace: development
  labels:
    helm.sh/chart: kubefirst-api-0.94.0
    app.kubernetes.io/name: kubefirst-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: release-name-kubefirst-api-pi-hook
      labels:
        app.kubernetes.io/name: kubefirst-api
        app.kubernetes.io/instance: release-name
    spec:
      restartPolicy: Never
      containers:
        - name: release-name-kubefirst-api-pi-hook
          securityContext:
            {}
          image: "public.ecr.aws/kubefirst/metrics-client:v0.3.0"
          imagePullPolicy: Always
          args: [
            "transmit",
          ]
          env:
            - name: CLOUD_PROVIDER
              value: unset
            - name: CLUSTER_ID
              value: "ZQe1xR"
            - name: CLUSTER_TYPE
              value: "bootstrap"
            - name: DOMAIN_NAME
              value: unset
            - name: GIT_PROVIDER
              value: unset
            - name: INSTALL_METHOD
              value: "helm"
            - name: KUBEFIRST_CLIENT
              value: api # deprecated
            - name: KUBEFIRST_TEAM
              value: "false"
            - name: KUBEFIRST_TEAM_INFO
              value: ""
            - name: KUBEFIRST_VERSION
              value: unset
            - name: PARENT_CLUSTER_ID
              value: "ZQe1xR"
            - name: USE_TELEMETRY
              value: "true"
