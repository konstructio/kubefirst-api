2023-04-05T09:52 INF pkg/helpers.go:71 > Using config file: /Users/jared/.kubefirst
2023-04-05T09:52 INF cmd/k3d/create.go:226 > set gitlab owner to kubefirst-je
2023-04-05T09:52 INF pkg/helpers.go:37 > original domain name: kubefirst.dev
2023-04-05T09:52 INF pkg/helpers.go:43 > adjusted domain name:  kubefirst.dev
2023-04-05T09:52 INF cmd/k3d/create.go:307 > kubefirst version configs.K1Version: development 
2023-04-05T09:52 INF cmd/k3d/create.go:308 > cloning gitops-template repo url: https://github.com/kubefirst/gitops-template.git 
2023-04-05T09:52 INF cmd/k3d/create.go:309 > cloning gitops-template repo branch: main 
2023-04-05T09:52 INF cmd/k3d/create.go:320 > checking authentication to required providers
2023-04-05T09:52 INF cmd/k3d/create.go:446 > creating an ssh key pair for your new cloud infrastructure
2023-04-05T09:52 INF cmd/k3d/create.go:454 > ssh key pair creation complete
2023-04-05T09:52 INF cmd/k3d/create.go:462 > kbot-setup complete
2023-04-05T09:52 INF cmd/k3d/create.go:468 > validation and kubefirst cli environment check is complete
2023-04-05T09:52 INF pkg/helpers.go:37 > original domain name: kubefirst.dev
2023-04-05T09:52 INF pkg/helpers.go:43 > adjusted domain name:  kubefirst.dev
2023-04-05T09:52 INF pkg/helpers.go:37 > original domain name: kubefirst.dev
2023-04-05T09:52 INF pkg/helpers.go:43 > adjusted domain name:  kubefirst.dev
2023-04-05T09:52 INF cmd/k3d/create.go:522 > installing kubefirst dependencies
2023-04-05T09:52 INF internal/downloadManager/download.go:176 > Downloading zip from URL
2023-04-05T09:52 INF internal/downloadManager/download.go:99 > unzipping file /Users/jared/.k1/tools/terraform
2023-04-05T09:52 INF cmd/k3d/create.go:529 > download dependencies `$HOME/.k1/tools` complete
2023-04-05T09:52 INF cmd/k3d/create.go:553 > generating your new gitops repository
2023-04-05T09:52 INF internal/gitClient/git.go:43 > cloning url: https://github.com/kubefirst/gitops-template.git - git ref: main
2023-04-05T09:52 INF internal/k3d/create.go:84 > gitops repository clone complete
2023-04-05T09:52 INF internal/gitClient/git.go:89 > git remote add gitlab git@gitlab.com:kubefirst-je/gitops.git
2023-04-05T09:52 INF internal/k3d/adjustContent.go:103 > copying gitlab content: /Users/jared/.k1/gitops/ci/.gitlab-ci.yml
2023-04-05T09:52 INF internal/k3d/adjustContent.go:121 > copying argo workflows content: /Users/jared/.k1/gitops/ci/.argo
2023-04-05T09:52 INF internal/k3d/adjustContent.go:131 > copying dockerfile content: /Users/jared/.k1/gitops/ci/.argo
2023-04-05T09:52 INF internal/gitClient/git.go:108 > committing initial detokenized metaphor repo content
2023-04-05T09:52 INF internal/gitClient/git.go:108 > committing initial detokenized metaphor repo content
2023-04-05T09:52 INF internal/gitClient/git.go:89 > git remote add gitlab git@gitlab.com:kubefirst-je/metaphor.git
2023-04-05T09:52 INF internal/gitClient/git.go:108 > committing initial detokenized gitops-template repo content
2023-04-05T09:53 INF cmd/k3d/create.go:618 > Creating gitlab resources with terraform
2023-04-05T09:53 INF pkg/shell.go:64 >  export TF_VAR_aws_secret_access_key = *************
2023-04-05T09:53 INF pkg/shell.go:64 >  export GITLAB_TOKEN = **************************
2023-04-05T09:53 INF pkg/shell.go:64 >  export GITLAB_OWNER = ************
2023-04-05T09:53 INF pkg/shell.go:64 >  export TF_VAR_owner_group_id = ********
2023-04-05T09:53 INF pkg/shell.go:64 >  export TF_VAR_kbot_ssh_public_key = *********************************************************************************
2023-04-05T09:53 INF pkg/shell.go:64 >  export AWS_ACCESS_KEY_ID = *****
2023-04-05T09:53 INF pkg/shell.go:64 >  export AWS_SECRET_ACCESS_KEY = *************
2023-04-05T09:53 INF pkg/shell.go:64 >  export TF_VAR_aws_access_key_id = *****
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing modules...[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - gitops in modules/project
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - metaphor in modules/project
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing the backend...[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing provider plugins...[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Finding gitlabhq/gitlab versions matching "15.8.0"...
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installing gitlabhq/gitlab v15.8.0...
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installed gitlabhq/gitlab v15.8.0 (self-signed, key ID [0m[1m0D47B7AB85F63F65[0m[0m)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Partner and community providers are signed by their developers.
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: If you'd like to know more about provider signing, you can read about it here:
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: https://www.terraform.io/docs/cli/plugins/signing.html
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: selections it made above. Include this file in your version control repository
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: so that Terraform can guarantee to make the same selections by default when
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: you run "terraform init" in the future.[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[32m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: You may now begin working with Terraform. Try running "terraform plan" to see
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: any changes that are required for your infrastructure. All Terraform commands
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: should now work.
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: If you ever set or change modules or backend configuration for Terraform,
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: rerun this command to reinitialize your working directory. If you forget, other
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: commands will detect it and remind you to do so if necessary.[0m
2023-04-05T09:53 INF pkg/shell.go:64 >  export AWS_SECRET_ACCESS_KEY = *************
2023-04-05T09:53 INF pkg/shell.go:64 >  export TF_VAR_aws_access_key_id = *****
2023-04-05T09:53 INF pkg/shell.go:64 >  export TF_VAR_aws_secret_access_key = *************
2023-04-05T09:53 INF pkg/shell.go:64 >  export GITLAB_TOKEN = **************************
2023-04-05T09:53 INF pkg/shell.go:64 >  export GITLAB_OWNER = ************
2023-04-05T09:53 INF pkg/shell.go:64 >  export TF_VAR_owner_group_id = ********
2023-04-05T09:53 INF pkg/shell.go:64 >  export TF_VAR_kbot_ssh_public_key = *********************************************************************************
2023-04-05T09:53 INF pkg/shell.go:64 >  export AWS_ACCESS_KEY_ID = *****
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.gitlab_group.owner: Reading...[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.gitlab_group.owner: Read complete after 0s [id=64351514][0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform used the selected providers to generate the following execution
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: plan. Resource actions are indicated with the following symbols:
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   [32m+[0m create
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform will perform the following actions:
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # gitlab_group.admins[0m will be created[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "gitlab_group" "admins" {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mauto_devops_enabled[0m[0m                = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mavatar_hash[0m[0m                        = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mavatar_url[0m[0m                         = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdefault_branch_protection[0m[0m          = 2
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdescription[0m[0m                        = "admins group"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0memails_disabled[0m[0m                    = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mextra_shared_runners_minutes_limit[0m[0m = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mfull_name[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mfull_path[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlfs_enabled[0m[0m                        = true
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmentions_disabled[0m[0m                  = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m                               = "admins"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_id[0m[0m                          = 64351514
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                               = "admins"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mprevent_forking_outside_group[0m[0m      = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mproject_creation_level[0m[0m             = "maintainer"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrequest_access_enabled[0m[0m             = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrequire_two_factor_authentication[0m[0m  = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrunners_token[0m[0m                      = (sensitive value)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mshare_with_group_lock[0m[0m              = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mshared_runners_minutes_limit[0m[0m       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msubgroup_creation_level[0m[0m            = "owner"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtwo_factor_grace_period[0m[0m            = 48
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mvisibility_level[0m[0m                   = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mweb_url[0m[0m                            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # gitlab_group.developers[0m will be created[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "gitlab_group" "developers" {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mauto_devops_enabled[0m[0m                = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mavatar_hash[0m[0m                        = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mavatar_url[0m[0m                         = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdefault_branch_protection[0m[0m          = 2
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdescription[0m[0m                        = "developers group"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0memails_disabled[0m[0m                    = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mextra_shared_runners_minutes_limit[0m[0m = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mfull_name[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mfull_path[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlfs_enabled[0m[0m                        = true
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmentions_disabled[0m[0m                  = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m                               = "developers"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_id[0m[0m                          = 64351514
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                               = "developers"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mprevent_forking_outside_group[0m[0m      = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mproject_creation_level[0m[0m             = "maintainer"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrequest_access_enabled[0m[0m             = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrequire_two_factor_authentication[0m[0m  = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrunners_token[0m[0m                      = (sensitive value)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mshare_with_group_lock[0m[0m              = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mshared_runners_minutes_limit[0m[0m       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msubgroup_creation_level[0m[0m            = "owner"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtwo_factor_grace_period[0m[0m            = 48
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mvisibility_level[0m[0m                   = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mweb_url[0m[0m                            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # gitlab_group_share_group.admins[0m will be created[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "gitlab_group_share_group" "admins" {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_access[0m[0m   = "owner"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m       = "64351514"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mshare_group_id[0m[0m = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # gitlab_group_share_group.developers[0m will be created[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "gitlab_group_share_group" "developers" {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_access[0m[0m   = "maintainer"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m       = "64351514"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mshare_group_id[0m[0m = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.gitops.gitlab_project.project[0m will be created[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "gitlab_project" "project" {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mallow_merge_on_skipped_pipeline[0m[0m                  = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0manalytics_access_level[0m[0m                           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0marchived[0m[0m                                         = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mauto_cancel_pending_pipelines[0m[0m                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mauto_devops_deploy_strategy[0m[0m                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mauto_devops_enabled[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mautoclose_referenced_issues[0m[0m                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mavatar_hash[0m[0m                                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mavatar_url[0m[0m                                       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbuild_git_strategy[0m[0m                               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbuild_timeout[0m[0m                                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbuilds_access_level[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mci_default_git_depth[0m[0m                             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mci_forward_deployment_enabled[0m[0m                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mci_separated_caches[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcontainer_registry_access_level[0m[0m                  = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcontainer_registry_enabled[0m[0m                       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdefault_branch[0m[0m                                   = "main"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mforking_access_level[0m[0m                             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mhttp_url_to_repo[0m[0m                                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                                               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0minitialize_with_readme[0m[0m                           = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0missues_access_level[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0missues_enabled[0m[0m                                   = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlfs_enabled[0m[0m                                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_method[0m[0m                                     = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_pipelines_enabled[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_requests_access_level[0m[0m                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_requests_enabled[0m[0m                           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_trains_enabled[0m[0m                             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmirror_overwrites_diverged_branches[0m[0m              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmirror_trigger_builds[0m[0m                            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m                                             = "gitops"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                                     = 64351514
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0monly_allow_merge_if_all_discussions_are_resolved[0m[0m = true
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0monly_allow_merge_if_pipeline_succeeds[0m[0m            = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0monly_mirror_protected_branches[0m[0m                   = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0moperations_access_level[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpackages_enabled[0m[0m                                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpages_access_level[0m[0m                               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath_with_namespace[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpipelines_enabled[0m[0m                                = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mprinting_merge_request_link_enabled[0m[0m              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpublic_builds[0m[0m                                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mremove_source_branch_after_merge[0m[0m                 = true
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrepository_access_level[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrepository_storage[0m[0m                               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrequest_access_enabled[0m[0m                           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrequirements_access_level[0m[0m                        = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrunners_token[0m[0m                                    = (sensitive value)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msecurity_and_compliance_access_level[0m[0m             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mshared_runners_enabled[0m[0m                           = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msnippets_access_level[0m[0m                            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msnippets_enabled[0m[0m                                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msquash_option[0m[0m                                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mssh_url_to_repo[0m[0m                                  = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtags[0m[0m                                             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtopics[0m[0m                                           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mvisibility_level[0m[0m                                 = "private"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mweb_url[0m[0m                                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mwiki_access_level[0m[0m                                = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mwiki_enabled[0m[0m                                     = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0mcontainer_expiration_policy {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mcadence[0m[0m           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0menabled[0m[0m           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mkeep_n[0m[0m            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mname_regex_delete[0m[0m = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mname_regex_keep[0m[0m   = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mnext_run_at[0m[0m       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0molder_than[0m[0m        = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0mpush_rules {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mauthor_email_regex[0m[0m            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mbranch_name_regex[0m[0m             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mcommit_committer_check[0m[0m        = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mcommit_message_negative_regex[0m[0m = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mcommit_message_regex[0m[0m          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mdeny_delete_tag[0m[0m               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mfile_name_regex[0m[0m               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mmax_file_size[0m[0m                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mmember_check[0m[0m                  = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mprevent_secrets[0m[0m               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mreject_unsigned_commits[0m[0m       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.metaphor.gitlab_project.project[0m will be created[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "gitlab_project" "project" {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mallow_merge_on_skipped_pipeline[0m[0m                  = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0manalytics_access_level[0m[0m                           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0marchived[0m[0m                                         = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mauto_cancel_pending_pipelines[0m[0m                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mauto_devops_deploy_strategy[0m[0m                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mauto_devops_enabled[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mautoclose_referenced_issues[0m[0m                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mavatar_hash[0m[0m                                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mavatar_url[0m[0m                                       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbuild_git_strategy[0m[0m                               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbuild_timeout[0m[0m                                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbuilds_access_level[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mci_default_git_depth[0m[0m                             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mci_forward_deployment_enabled[0m[0m                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mci_separated_caches[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcontainer_registry_access_level[0m[0m                  = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcontainer_registry_enabled[0m[0m                       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdefault_branch[0m[0m                                   = "main"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mforking_access_level[0m[0m                             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mhttp_url_to_repo[0m[0m                                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                                               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0minitialize_with_readme[0m[0m                           = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0missues_access_level[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0missues_enabled[0m[0m                                   = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlfs_enabled[0m[0m                                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_method[0m[0m                                     = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_pipelines_enabled[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_requests_access_level[0m[0m                      = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_requests_enabled[0m[0m                           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmerge_trains_enabled[0m[0m                             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmirror_overwrites_diverged_branches[0m[0m              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmirror_trigger_builds[0m[0m                            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m                                             = "metaphor"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                                     = 64351514
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0monly_allow_merge_if_all_discussions_are_resolved[0m[0m = true
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0monly_allow_merge_if_pipeline_succeeds[0m[0m            = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0monly_mirror_protected_branches[0m[0m                   = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0moperations_access_level[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpackages_enabled[0m[0m                                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpages_access_level[0m[0m                               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath_with_namespace[0m[0m                              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpipelines_enabled[0m[0m                                = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mprinting_merge_request_link_enabled[0m[0m              = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpublic_builds[0m[0m                                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mremove_source_branch_after_merge[0m[0m                 = true
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrepository_access_level[0m[0m                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrepository_storage[0m[0m                               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrequest_access_enabled[0m[0m                           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrequirements_access_level[0m[0m                        = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrunners_token[0m[0m                                    = (sensitive value)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msecurity_and_compliance_access_level[0m[0m             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mshared_runners_enabled[0m[0m                           = false
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msnippets_access_level[0m[0m                            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msnippets_enabled[0m[0m                                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0msquash_option[0m[0m                                    = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mssh_url_to_repo[0m[0m                                  = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtags[0m[0m                                             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtopics[0m[0m                                           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mvisibility_level[0m[0m                                 = "private"
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mweb_url[0m[0m                                          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mwiki_access_level[0m[0m                                = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mwiki_enabled[0m[0m                                     = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0mcontainer_expiration_policy {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mcadence[0m[0m           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0menabled[0m[0m           = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mkeep_n[0m[0m            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mname_regex_delete[0m[0m = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mname_regex_keep[0m[0m   = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mnext_run_at[0m[0m       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0molder_than[0m[0m        = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0mpush_rules {
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mauthor_email_regex[0m[0m            = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mbranch_name_regex[0m[0m             = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mcommit_committer_check[0m[0m        = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mcommit_message_negative_regex[0m[0m = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mcommit_message_regex[0m[0m          = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mdeny_delete_tag[0m[0m               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mfile_name_regex[0m[0m               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mmax_file_size[0m[0m                 = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mmember_check[0m[0m                  = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mprevent_secrets[0m[0m               = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m[1m[0mreject_unsigned_commits[0m[0m       = (known after apply)
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mPlan:[0m 6 to add, 0 to change, 0 to destroy.
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[0m[1mgitlab_group.developers: Creating...[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mgitlab_group.admins: Creating...[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.metaphor.gitlab_project.project: Creating...[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitops.gitlab_project.project: Creating...[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mgitlab_group.developers: Creation complete after 1s [id=65980961][0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mgitlab_group_share_group.developers: Creating...[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mgitlab_group.admins: Creation complete after 1s [id=65980963][0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mgitlab_group_share_group.admins: Creating...[0m[0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mgitlab_group_share_group.developers: Creation complete after 0s [id=64351514:65980961][0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mgitlab_group_share_group.admins: Creation complete after 1s [id=64351514:65980963][0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.metaphor.gitlab_project.project: Creation complete after 2s [id=44937018][0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitops.gitlab_project.project: Creation complete after 2s [id=44937019][0m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1m[32m
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Apply complete! Resources: 6 added, 0 changed, 0 destroyed.
2023-04-05T09:53 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m
2023-04-05T09:53 INF cmd/k3d/create.go:635 > created git projects and groups for gitlab.com/kubefirst-je
2023-04-05T09:53 INF cmd/k3d/create.go:649 > referencing gitops repository: git@gitlab.com:kubefirst-je/gitops.git
2023-04-05T09:53 INF cmd/k3d/create.go:650 > referencing metaphor repository: git@gitlab.com:kubefirst-je/metaphor.git
2023-04-05T09:53 INF cmd/k3d/create.go:688 > creating ssh key kubefirst-k3d-ssh-key...
2023-04-05T09:53 INF cmd/k3d/create.go:720 > successfully pushed gitops and metaphor repositories to git@gitlab.com/kubefirst-je
2023-04-05T09:53 INF cmd/k3d/create.go:737 > Creating k3d cluster
2023-04-05T09:53 INF internal/k3d/create.go:22 > creating K3d cluster...
2023-04-05T09:53 INF pkg/shell.go:30 > OUT: [36mINFO[0m[0000] portmapping '443:443' targets the loadbalancer: defaulting to [servers:*:proxy agents:*:proxy] 
[36mINFO[0m[0000] Prep: Network                                
[36mINFO[0m[0000] Created network 'k3d-kubefirst'              
[36mINFO[0m[0000] Created image volume k3d-kubefirst-images    
[36mINFO[0m[0000] Creating node 'k3d-kubefirst-registry'       
[36mINFO[0m[0000] Successfully created registry 'k3d-kubefirst-registry' 
[36mINFO[0m[0000] Starting new tools node...                   
[36mINFO[0m[0000] Starting Node 'k3d-kubefirst-tools'          
[36mINFO[0m[0001] Creating node 'k3d-kubefirst-server-0'       
[36mINFO[0m[0001] Creating node 'k3d-kubefirst-agent-0'        
[36mINFO[0m[0001] Creating node 'k3d-kubefirst-agent-1'        
[36mINFO[0m[0002] Creating node 'k3d-kubefirst-agent-2'        
[36mINFO[0m[0002] Creating LoadBalancer 'k3d-kubefirst-serverlb' 
[36mINFO[0m[0002] Using the k3d-tools node to gather environment information 
[36mINFO[0m[0003] Starting new tools node...                   
[36mINFO[0m[0003] Starting Node 'k3d-kubefirst-tools'          
[36mINFO[0m[0004] Starting cluster 'kubefirst'                 
[36mINFO[0m[0004] Starting servers...                          
[36mINFO[0m[0004] Starting Node 'k3d-kubefirst-server-0'       
[36mINFO[0m[0008] Starting agents...                           
[36mINFO[0m[0009] Starting Node 'k3d-kubefirst-agent-1'        
[36mINFO[0m[0009] Starting Node 'k3d-kubefirst-agent-2'        
[36mINFO[0m[0009] Starting Node 'k3d-kubefirst-agent-0'        
[36mINFO[0m[0018] Starting helpers...                          
[36mINFO[0m[0018] Starting Node 'k3d-kubefirst-registry'       
[36mINFO[0m[0018] Starting Node 'k3d-kubefirst-serverlb'       
[36mINFO[0m[0025] Injecting records for hostAliases (incl. host.k3d.internal) and for 7 network members into CoreDNS configmap... 
[36mINFO[0m[0028] Cluster 'kubefirst' created successfully!    
[36mINFO[0m[0028] You can now use it like this:                
kubectl cluster-info

2023-04-05T09:53 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/k3d
2023-04-05T09:54 INF pkg/shell.go:30 > OUT: ---
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJlRENDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdGMyVnkKZG1WeUxXTmhRREUyT0RBM01UQXdNVE13SGhjTk1qTXdOREExTVRVMU16TXpXaGNOTXpNd05EQXlNVFUxTXpNegpXakFqTVNFd0h3WURWUVFEREJock0zTXRjMlZ5ZG1WeUxXTmhRREUyT0RBM01UQXdNVE13V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFUOHByY1ZzVHRONXZKcmpra0t6WHE5TlRycVprc3pRMzNLUEsvSnRXSXQKTURWeXJpTkR1eXlCVnRUd2g0QnoxamRHMGxKbFovei8xQmZlL0RuN3dtSHZvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUE1cEFaQ3NhUFFDYVJzeG9ZdE5ZCnVyNE9wNDR3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQUwybVcreDhJb05CYk11NVlqdE13b0k1SnJ5UEFjd2wKK1FZRDJweFFSUm9vQWlFQXdiaDY1NXMvK0duWW44U2VzVEV6MVZKMWllTVBCM1N6QWNpS09kc3QyWDA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://0.0.0.0:63957
  name: k3d-kubefirst
contexts:
- context:
    cluster: k3d-kubefirst
    user: admin@k3d-kubefirst
  name: k3d-kubefirst
current-context: k3d-kubefirst
kind: Config
preferences: {}
users:
- name: admin@k3d-kubefirst
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJrVENDQVRlZ0F3SUJBZ0lJYTlUUFhkc2wrbEV3Q2dZSUtvWkl6ajBFQXdJd0l6RWhNQjhHQTFVRUF3d1kKYXpOekxXTnNhV1Z1ZEMxallVQXhOamd3TnpFd01ERXpNQjRYRFRJek1EUXdOVEUxTlRNek0xb1hEVEkwTURRdwpOREUxTlRNek0xb3dNREVYTUJVR0ExVUVDaE1PYzNsemRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41CmMzUmxiVHBoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJLYnNmMVE0MXFuRFR1ZWMKSjlTUEcyRll3M3I0VHM4WXllS01CNENTaDkxUWNJOFpLNThiUVdEWlo2OUZMdkF2MWRyL2pwOGJMVUZjYVZDWQpqM2lQOGFDalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFmCkJnTlZIU01FR0RBV2dCU1pUTDU0YU00MmlUYldtVk04ZFpaMlNNeTdTVEFLQmdncWhrak9QUVFEQWdOSUFEQkYKQWlFQTNxVmcrODhBSUtqMkhmbEEyMjROMWlRSWtrd2ZKQUlPcHFFbkcyYmxnTVFDSUFyMjArUmtHU2xIVjY4RApPWHdwa0ZDL05jY2xOL3ptTWRjTXRIejlHRFFxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdFkyeHAKWlc1MExXTmhRREUyT0RBM01UQXdNVE13SGhjTk1qTXdOREExTVRVMU16TXpXaGNOTXpNd05EQXlNVFUxTXpNegpXakFqTVNFd0h3WURWUVFEREJock0zTXRZMnhwWlc1MExXTmhRREUyT0RBM01UQXdNVE13V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFSenlteDhlOW42WGZxVHRiNXVZS2hpVXN3VmxxNHY5MElnazlWa1RvZ2YKcndKMlo5RS9TYTRhbkNNMzlUTnZSRldta1lIbGl0RTNuZWtWdFZKNnhIOXFvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVW1VeStlR2pPTm9rMjFwbFRQSFdXCmRrak11MGt3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUtDWVg0RUtFbGJHNUxkUkRGS3ZVd3h1V21iUUViS3MKaWpwTXBJQnF6VndmQWlCR2JzY3ZEaDFDaGc0WXJvcUFEeGZlMkZETmRaMk9LTnY3SitpcVc5TUJBZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5PSy9NaFJRVTY0WEU5bll6OHBVbHhFcVBqc0JTWGJKKzBKdFkveTAyVitvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFcHV4L1ZEaldxY05PNTV3bjFJOGJZVmpEZXZoT3p4ako0b3dIZ0pLSDNWQndqeGtybnh0QgpZTmxucjBVdThDL1YyditPbnhzdFFWeHBVSmlQZUkveG9BPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=

2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/k3d
2023-04-05T09:54 INF cmd/k3d/create.go:747 > successfully created k3d cluster
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 0, argo
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: argo
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate argo.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "argo.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/argo-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/argo-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: argo/argo
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 1, argocd
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: argocd
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate argocd.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "argocd.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/argocd-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/argocd-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: argocd/argocd
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 2, atlantis
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: atlantis
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate atlantis.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "atlantis.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/atlantis-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/atlantis-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: atlantis/atlantis
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 3, chartmuseum
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: chartmuseum
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate chartmuseum.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "chartmuseum.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/chartmuseum-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/chartmuseum-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: chartmuseum/chartmuseum
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 4, vault
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: vault
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate vault.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "vault.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/vault-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/vault-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: vault/vault
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 5, minio
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: minio
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate minio.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "minio.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/minio-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/minio-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: minio/minio
2023-04-05T09:54 WRN internal/k3d/ssl.go:39 > namespace minio already exists - skipping
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate minio-console.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "minio-console.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/minio-console-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/minio-console-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: minio/minio-console
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 7, kubefirst
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: kubefirst
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate kubefirst.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "kubefirst.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/kubefirst-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/kubefirst-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: kubefirst/kubefirst
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 8, development
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: development
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate metaphor-development.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "metaphor-development.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/metaphor-development-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/metaphor-development-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: development/metaphor-development
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 9, staging
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: staging
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate metaphor-staging.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "metaphor-staging.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/metaphor-staging-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/metaphor-staging-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: staging/metaphor-staging
2023-04-05T09:54 INF internal/k3d/ssl.go:36 > 10, production
2023-04-05T09:54 INF internal/k3d/ssl.go:37 > namespace created: production
2023-04-05T09:54 INF internal/k3d/ssl.go:48 > generating certificate metaphor-production.kubefirst.dev on /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 ERR pkg/shell.go:27 > error executing command: Note: the local CA is not installed in the Firefox trust store.
Run "mkcert -install" for certificates to be trusted automatically ⚠️

Created a new certificate valid for the following names 📜
 - "kubefirst.dev"
 - "metaphor-production.kubefirst.dev"

The certificate is at "/Users/jared/.k1/ssl/kubefirst.dev/pem/metaphor-production-cert.pem" and the key at "/Users/jared/.k1/ssl/kubefirst.dev/pem/metaphor-production-key.pem" ✅

It will expire on 5 July 2025 🗓


2023-04-05T09:54 INF pkg/shell.go:30 > OUT: 
2023-04-05T09:54 INF pkg/shell.go:31 > Command: /Users/jared/.k1/tools/mkcert
2023-04-05T09:54 INF internal/k3d/ssl.go:90 > created kubernetes secret: production/metaphor-production
2023-04-05T09:54 WRN internal/k3d/secrets.go:61 > namespace atlantis already exists - skipping
2023-04-05T09:54 INF internal/k3d/secrets.go:58 > 1, external-dns
2023-04-05T09:54 INF internal/k3d/secrets.go:59 > namespace created: external-dns
2023-04-05T09:54 INF internal/k3d/secrets.go:58 > 2, external-secrets-operator
2023-04-05T09:54 INF internal/k3d/secrets.go:59 > namespace created: external-secrets-operator
2023-04-05T09:54 INF internal/k3d/secrets.go:58 > 3, gitlab-runner
2023-04-05T09:54 INF internal/k3d/secrets.go:59 > namespace created: gitlab-runner
2023-04-05T09:54 INF internal/k3d/secrets.go:92 > created kubernetes secret: argocd/repo-credentials-template
2023-04-05T09:54 INF internal/k3d/secrets.go:120 > created kubernetes service account: atlantis/atlantis
2023-04-05T09:54 INF internal/k3d/secrets.go:120 > created kubernetes service account: external-secrets-operator/external-secrets
2023-04-05T09:54 INF cmd/k3d/create.go:857 > creating project deploy token for project metaphor...
2023-04-05T09:54 INF kubefirst/internal/gitlab/(*GitLabWrapper)/gitlab.go:294 > created deploy token metaphor-deploy-token
2023-04-05T09:54 INF cmd/k3d/create.go:874 > installing argocd
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:31 > applying objects against kubernetes cluster
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Namespace argocd
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied CustomResourceDefinition applications.argoproj.io
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied CustomResourceDefinition applicationsets.argoproj.io
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied CustomResourceDefinition appprojects.argoproj.io
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount argocd-application-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount argocd-applicationset-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount argocd-dex-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount argocd-notifications-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount argocd-redis-ha
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount argocd-redis-ha-haproxy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount argocd-repo-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount argocd-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Role argocd-application-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Role argocd-applicationset-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Role argocd-dex-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Role argocd-notifications-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Role argocd-redis-ha
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Role argocd-redis-ha-haproxy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Role argocd-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ClusterRole argocd-application-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ClusterRole argocd-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied RoleBinding argocd-application-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied RoleBinding argocd-applicationset-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied RoleBinding argocd-dex-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied RoleBinding argocd-notifications-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied RoleBinding argocd-redis-ha
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied RoleBinding argocd-redis-ha-haproxy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied RoleBinding argocd-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ClusterRoleBinding argocd-application-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ClusterRoleBinding argocd-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-cm
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-cmd-params-cm
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-gpg-keys-cm
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-notifications-cm
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-rbac-cm
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-redis-ha-configmap
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-redis-ha-health-configmap
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-ssh-known-hosts-cm
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ConfigMap argocd-tls-certs-cm
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Secret argocd-notifications-secret
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Secret argocd-secret
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-applicationset-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-dex-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-metrics
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-notifications-controller-metrics
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-redis-ha
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-redis-ha-announce-0
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-redis-ha-announce-1
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-redis-ha-announce-2
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-redis-ha-haproxy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-repo-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Service argocd-server-metrics
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Deployment argocd-applicationset-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Deployment argocd-dex-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Deployment argocd-notifications-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Deployment argocd-redis-ha-haproxy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Deployment argocd-repo-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Deployment argocd-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied StatefulSet argocd-application-controller
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied StatefulSet argocd-redis-ha-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Ingress argocd-server
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied NetworkPolicy argocd-application-controller-network-policy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied NetworkPolicy argocd-applicationset-controller-network-policy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied NetworkPolicy argocd-dex-server-network-policy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied NetworkPolicy argocd-notifications-controller-network-policy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied NetworkPolicy argocd-redis-ha-proxy-network-policy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied NetworkPolicy argocd-redis-ha-server-network-policy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied NetworkPolicy argocd-repo-server-network-policy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied NetworkPolicy argocd-server-network-policy
2023-04-05T09:54 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied IngressRoute argocd-server
2023-04-05T09:54 INF internal/k8s/exec.go:269 > waiting for argocd StatefulSet to be created using label app.kubernetes.io/part-of=argocd
2023-04-05T09:54 INF internal/k8s/exec.go:394 > waiting for argocd-application-controller StatefulSet to be ready - this could take up to 240 seconds
2023-04-05T09:55 INF internal/k8s/exec.go:433 > All Pods in StatefulSet argocd-application-controller are ready.
2023-04-05T09:55 INF internal/k8s/exec.go:171 > waiting for argocd-server Deployment to be created
2023-04-05T09:55 INF internal/k8s/exec.go:313 > waiting for argocd-server Deployment to be ready - this could take up to 240 seconds
2023-04-05T09:55 INF internal/k8s/exec.go:327 > all Pods in Deployment argocd-server are ready
2023-04-05T09:55 INF internal/k8s/exec.go:171 > waiting for argocd-repo-server Deployment to be created
2023-04-05T09:55 INF internal/k8s/exec.go:313 > waiting for argocd-repo-server Deployment to be ready - this could take up to 240 seconds
2023-04-05T09:55 INF internal/k8s/exec.go:327 > all Pods in Deployment argocd-repo-server are ready
2023-04-05T09:55 INF internal/k8s/exec.go:171 > waiting for argocd-redis-ha-haproxy Deployment to be created
2023-04-05T09:55 INF internal/k8s/exec.go:313 > waiting for argocd-redis-ha-haproxy Deployment to be ready - this could take up to 240 seconds
2023-04-05T09:55 INF internal/k8s/exec.go:327 > all Pods in Deployment argocd-redis-ha-haproxy are ready
2023-04-05T09:55 INF internal/k8s/exec.go:269 > waiting for argocd-redis-ha StatefulSet to be created using label app.kubernetes.io/name=argocd-redis-ha
2023-04-05T09:55 INF internal/k8s/exec.go:394 > waiting for argocd-redis-ha-server StatefulSet to be ready - this could take up to 240 seconds
2023-04-05T09:56 INF internal/k8s/exec.go:433 > All Pods in StatefulSet argocd-redis-ha-server are ready.
2023-04-05T09:56 INF cmd/k3d/create.go:909 > Setting argocd username and password credentials
2023-04-05T09:56 INF cmd/k3d/create.go:922 > argocd username and password credentials set successfully
2023-04-05T09:56 INF cmd/k3d/create.go:923 > Getting an argocd auth token
2023-04-05T09:56 INF internal/argocd/argocd.go:214 > using argocd url https://argocd.kubefirst.dev
2023-04-05T09:56 INF cmd/k3d/create.go:961 > argocd admin auth token set
2023-04-05T09:56 INF cmd/k3d/create.go:992 > applying the registry application to argocd
2023-04-05T09:56 INF internal/k8s/exec.go:269 > waiting for vault StatefulSet to be created using label app.kubernetes.io/instance=vault
2023-04-05T09:56 INF internal/k8s/exec.go:394 > waiting for vault StatefulSet to be ready - this could take up to 120 seconds
2023-04-05T09:57 INF internal/k8s/exec.go:424 > pod vault-0 in statefulset vault is running
2023-04-05T09:57 INF kubefirst/internal/k8s/KubernetesClient/apply.go:31 > applying objects against kubernetes cluster
2023-04-05T09:57 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied ServiceAccount vault-handler
2023-04-05T09:57 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Role vault-handler
2023-04-05T09:57 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied RoleBinding vault-handler
2023-04-05T09:57 INF kubefirst/internal/k8s/KubernetesClient/apply.go:86 > applied Job vault-handler
2023-04-05T09:57 INF internal/k8s/util.go:40 > waiting for vault-handler Job completion. This could take up to 240 seconds.
2023-04-05T09:57 INF internal/k8s/util.go:57 > job vault-handler completed at 2023-04-05 09:57:28 -0600 MDT.
LOG: 2023/04/05 09:57:28.328836 /Users/jared/git/kubefirst/github/kubefirst/internal/k8s/portForward.go:93: Namespace for PF minio
LOG: 2023/04/05 09:57:28.328914 /Users/jared/git/kubefirst/github/kubefirst/internal/k8s/portForward.go:94: Name for PF minio-5f46f7cd56-s8bs9
2023-04-05T09:57 INF internal/k8s/wrappers.go:63 > port forwarding is ready to get traffic
2023-04-05T09:57 INF internal/k8s/wrappers.go:66 > pod "minio" at namespace "minio" has port-forward accepting local connections at port 9000

2023-04-05T09:57 INF cmd/k3d/create.go:1098 > BucketName: kubefirst-state-store
LOG: 2023/04/05 09:57:28.425236 /Users/jared/git/kubefirst/github/kubefirst/internal/k8s/portForward.go:93: Namespace for PF vault
LOG: 2023/04/05 09:57:28.425288 /Users/jared/git/kubefirst/github/kubefirst/internal/k8s/portForward.go:94: Name for PF vault-0
2023-04-05T09:57 INF internal/k8s/wrappers.go:63 > port forwarding is ready to get traffic
2023-04-05T09:57 INF internal/k8s/wrappers.go:66 > pod "vault-0" at namespace "vault" has port-forward accepting local connections at port 8200

2023-04-05T09:57 INF cmd/k3d/create.go:1163 > configuring vault with terraform
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_owner_group_id = ********
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_b64_docker_auth = ********************************************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_aws_access_key_id = *****
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_vault_token = ****************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_atlantis_repo_webhook_secret = ********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_kubernetes_api_endpoint = *****************
2023-04-05T09:57 INF pkg/shell.go:64 >  export GITLAB_OWNER = ************
2023-04-05T09:57 INF pkg/shell.go:64 >  export AWS_ACCESS_KEY_ID = *****
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_metaphor_deploy_token = ********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_email_address = **************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_vault_addr = *********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_kbot_ssh_public_key = *********************************************************************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_aws_secret_access_key = *************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_gitlab_token = **************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export VAULT_ADDR = *********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_kbot_ssh_private_key = ****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export VAULT_TOKEN = ****************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export AWS_SECRET_ACCESS_KEY = *************
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing modules...[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - argo in modules/oidc-client
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - argocd in modules/oidc-client
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - console in modules/oidc-client
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - gitlab in modules/oidc-client
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing the backend...[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[32m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Successfully configured the backend "s3"! Terraform will automatically
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: use this backend unless the backend configuration changes.[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing provider plugins...[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Finding latest version of hashicorp/vault...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Finding latest version of hashicorp/random...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Finding latest version of hashicorp/kubernetes...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Finding gitlabhq/gitlab versions matching "3.20.0"...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installing hashicorp/random v3.4.3...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installed hashicorp/random v3.4.3 (signed by HashiCorp)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installing hashicorp/kubernetes v2.19.0...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installed hashicorp/kubernetes v2.19.0 (signed by HashiCorp)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installing gitlabhq/gitlab v3.20.0...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installed gitlabhq/gitlab v3.20.0 (self-signed, key ID [0m[1m0D47B7AB85F63F65[0m[0m)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installing hashicorp/vault v3.14.0...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installed hashicorp/vault v3.14.0 (signed by HashiCorp)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Partner and community providers are signed by their developers.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: If you'd like to know more about provider signing, you can read about it here:
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: https://www.terraform.io/docs/cli/plugins/signing.html
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: selections it made above. Include this file in your version control repository
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: so that Terraform can guarantee to make the same selections by default when
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: you run "terraform init" in the future.[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[32m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: You may now begin working with Terraform. Try running "terraform plan" to see
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: any changes that are required for your infrastructure. All Terraform commands
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: should now work.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: If you ever set or change modules or backend configuration for Terraform,
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: rerun this command to reinitialize your working directory. If you forget, other
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: commands will detect it and remind you to do so if necessary.[0m
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_kubernetes_api_endpoint = *****************
2023-04-05T09:57 INF pkg/shell.go:64 >  export GITLAB_OWNER = ************
2023-04-05T09:57 INF pkg/shell.go:64 >  export AWS_ACCESS_KEY_ID = *****
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_metaphor_deploy_token = ********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_email_address = **************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_vault_addr = *********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_vault_token = ****************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_atlantis_repo_webhook_secret = ********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_gitlab_token = **************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export VAULT_ADDR = *********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_kbot_ssh_private_key = ****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_kbot_ssh_public_key = *********************************************************************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_aws_secret_access_key = *************
2023-04-05T09:57 INF pkg/shell.go:64 >  export VAULT_TOKEN = ****************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export AWS_SECRET_ACCESS_KEY = *************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_owner_group_id = ********
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_b64_docker_auth = ********************************************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_aws_access_key_id = *****
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.gitlab_group.owner: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.gitlab_group.owner: Read complete after 0s [id=64351514][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform used the selected providers to generate the following execution
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: plan. Resource actions are indicated with the following symbols:
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   [32m+[0m create
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:  [36m<=[0m read (data resources)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform will perform the following actions:
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # random_password.chartmuseum_password[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "random_password" "chartmuseum_password" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbcrypt_hash[0m[0m      = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlength[0m[0m           = 22
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlower[0m[0m            = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmin_lower[0m[0m        = 0
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmin_numeric[0m[0m      = 0
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmin_special[0m[0m      = 0
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmin_upper[0m[0m        = 0
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnumber[0m[0m           = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnumeric[0m[0m          = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0moverride_special[0m[0m = "!#$"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mresult[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mspecial[0m[0m          = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mupper[0m[0m            = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_auth_backend.k8s[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_auth_backend" "k8s" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maccessor[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_remount[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m            = "kubernetes/kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtune[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m            = "kubernetes"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_auth_backend.userpass[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_auth_backend" "userpass" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maccessor[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_remount[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m            = "userpass"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtune[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m            = "userpass"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.atlantis_ngrok_secrets[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "atlantis_ngrok_secrets" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/atlantis-ngrok"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.atlantis_secrets[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "atlantis_secrets" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/atlantis"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.chartmuseum_secrets[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "chartmuseum_secrets" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/chartmuseum"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.ci_secrets[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "ci_secrets" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/ci-secrets"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.development_metaphor[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "development_metaphor" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/development/metaphor"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.docker_config[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "docker_config" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/dockerconfigjson"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.external_secrets_token[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "external_secrets_token" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/external-secrets-store"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.gitlab_runner[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "gitlab_runner" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/gitlab-runner"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.metaphor_deploy_token[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "metaphor_deploy_token" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/deploy-tokens/metaphor"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.minio_creds[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "minio_creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/minio"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.production_metaphor[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "production_metaphor" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/production/metaphor"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_generic_secret.staging_metaphor[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "staging_metaphor" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/staging/metaphor"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_group.admins[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_group" "admins" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_member_entity_ids[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_member_group_ids[0m[0m  = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_policies[0m[0m          = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                   = {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"version" = "2"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m                       = "admins"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                   = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"admin",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                       = "internal"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_group.developers[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_group" "developers" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_member_entity_ids[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_member_group_ids[0m[0m  = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_policies[0m[0m          = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                   = {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"version" = "2"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m                       = "developers"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                   = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"developer",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                       = "internal"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_oidc_key.key[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_key" "key" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malgorithm[0m[0m          = "RS256"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mallowed_client_ids[0m[0m = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"*",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                 = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m               = "kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrotation_period[0m[0m    = 86400
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mverification_ttl[0m[0m   = 2500
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_oidc_provider.kubefirst[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_provider" "kubefirst" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mallowed_client_ids[0m[0m = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"*",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mhttps_enabled[0m[0m      = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                 = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0missuer[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0missuer_host[0m[0m        = "vault.kubefirst.dev"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m               = "kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mscopes_supported[0m[0m   = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"email",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"groups",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"profile",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"user",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_oidc_scope.email_scope[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_scope" "email_scope" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdescription[0m[0m = "Email scope."
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m        = "email"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtemplate[0m[0m    = <<-EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               "email": {{identity.entity.metadata.email}}
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_oidc_scope.group_scope[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_scope" "group_scope" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdescription[0m[0m = "Groups scope."
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m        = "groups"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtemplate[0m[0m    = <<-EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               "groups": {{identity.entity.groups.names}}
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_oidc_scope.profile_scope[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_scope" "profile_scope" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdescription[0m[0m = "Profile scope."
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m        = "profile"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtemplate[0m[0m    = <<-EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               "profile": {{identity.entity.metadata.email}}
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_oidc_scope.user_scope[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_scope" "user_scope" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdescription[0m[0m = "User scope."
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m        = "user"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtemplate[0m[0m    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_kubernetes_auth_backend_config.k8s[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_kubernetes_auth_backend_config" "k8s" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbackend[0m[0m                = "kubernetes/kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_iss_validation[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_local_ca_jwt[0m[0m   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mkubernetes_ca_cert[0m[0m     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mkubernetes_host[0m[0m        = "https://10.43.0.1"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_kubernetes_auth_backend_role.k8s_atlantis[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_kubernetes_auth_backend_role" "k8s_atlantis" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name_source[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbackend[0m[0m                          = "kubernetes/kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbound_service_account_names[0m[0m      = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"atlantis",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbound_service_account_namespaces[0m[0m = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"*",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrole_name[0m[0m                        = "atlantis"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtoken_policies[0m[0m                   = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"admin",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"default",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtoken_ttl[0m[0m                        = 86400
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtoken_type[0m[0m                       = "default"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_kubernetes_auth_backend_role.k8s_external_secrets[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_kubernetes_auth_backend_role" "k8s_external_secrets" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name_source[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbackend[0m[0m                          = "kubernetes/kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbound_service_account_names[0m[0m      = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"external-secrets",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbound_service_account_namespaces[0m[0m = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"*",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mrole_name[0m[0m                        = "external-secrets"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtoken_policies[0m[0m                   = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"admin",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"default",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtoken_ttl[0m[0m                        = 86400
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtoken_type[0m[0m                       = "default"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_mount.secret[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_mount" "secret" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maccessor[0m[0m                     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maudit_non_hmac_request_keys[0m[0m  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maudit_non_hmac_response_keys[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdefault_lease_ttl_seconds[0m[0m    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdescription[0m[0m                  = "the default vault kv v2 backend"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_entropy_access[0m[0m      = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                           = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmax_lease_ttl_seconds[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                         = "secret"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mseal_wrap[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                         = "kv-v2"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_mount.users[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_mount" "users" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maccessor[0m[0m                     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maudit_non_hmac_request_keys[0m[0m  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maudit_non_hmac_response_keys[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdefault_lease_ttl_seconds[0m[0m    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdescription[0m[0m                  = "kv v2 backend"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_entropy_access[0m[0m      = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                           = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmax_lease_ttl_seconds[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                         = "users"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mseal_wrap[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                         = "kv-v2"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_policy.admin[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_policy" "admin" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m   = "admin"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicy[0m[0m = <<-EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Create and manage entities and groups
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "identity/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = [ "create", "read", "update", "delete", "list" ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Configure the OIDC auth method
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "auth/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = [ "create", "read", "update", "delete", "list" ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Write ACL policies
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/policies/acl/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = [ "create", "read", "update", "delete", "list" ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow default access to secret
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "secret/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["create", "read", "update", "delete", "list"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "aws/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["create", "read", "update", "delete", "list"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow default access to secret
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "avp/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["create", "read", "update", "delete", "list"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/mounts/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = [ "create", "read", "update", "delete", "list" ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # List enabled secrets engine
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/mounts" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = [ "read", "list" ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # allow admins to manage auth methods
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "/sys/auth*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["create", "read", "update", "delete", "list", "sudo"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # allow admins to manage auth methods
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/auth/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = [ "create", "read", "update", "delete", "list" ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow tokens to look up their own properties
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "auth/token/lookup-self" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow tokens to renew themselves
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "auth/token/renew-self" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow tokens to revoke themselves
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "auth/token/revoke-self" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to look up its own capabilities on a path
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/capabilities-self" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to look up its own entity by id or name
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "identity/entity/id/{{identity.entity.id}}" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "identity/entity/name/{{identity.entity.name}}" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to look up its resultant ACL from all policies. This is useful
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # for UIs. It is an internal path because the format may change at any time
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # based on how the internal ACL features and capabilities change.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/internal/ui/resultant-acl" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to renew a lease via lease_id in the request body; old path for
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # old clients, new path for newer
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/renew" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/leases/renew" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow looking up lease properties. This requires knowing the lease ID ahead
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # of time and does not divulge any sensitive information.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/leases/lookup" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to manage its own cubbyhole
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "cubbyhole/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["create", "read", "update", "delete", "list"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to wrap arbitrary values in a response-wrapping token
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/wrapping/wrap" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to look up the creation time and TTL of a given
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # response-wrapping token
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/wrapping/lookup" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to unwrap a response-wrapping token. This is a convenience to
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # avoid client token swapping since this is also part of the response wrapping
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # policy.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/wrapping/unwrap" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow general purpose tools
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/tools/hash" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/tools/hash/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow checking the status of a Control Group request if the user has the
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # accessor
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/control-group/request" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_policy.developer[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_policy" "developer" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m   = "developer"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicy[0m[0m = <<-EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow full write access to developers, without delete
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Obviously it's your vault now, feel free to change the rules
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "secret/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["create", "read", "update", "list"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "aws/creds/KubernetesDeveloper" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # List available secrets engines to retrieve accessor ID
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/mounts" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = [ "read" ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow tokens to look up their own properties
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "auth/token/lookup-self" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow tokens to renew themselves
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "auth/token/renew-self" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow tokens to revoke themselves
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "auth/token/revoke-self" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to look up its own capabilities on a path
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/capabilities-self" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to look up its own entity by id or name
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "identity/entity/id/{{identity.entity.id}}" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "identity/entity/name/{{identity.entity.name}}" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:               capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to look up its resultant ACL from all policies. This is useful
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # for UIs. It is an internal path because the format may change at any time
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # based on how the internal ACL features and capabilities change.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/internal/ui/resultant-acl" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["read"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to renew a lease via lease_id in the request body; old path for
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # old clients, new path for newer
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/renew" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/leases/renew" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow looking up lease properties. This requires knowing the lease ID ahead
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # of time and does not divulge any sensitive information.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/leases/lookup" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to manage its own cubbyhole
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "cubbyhole/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["create", "read", "update", "delete", "list"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to wrap arbitrary values in a response-wrapping token
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/wrapping/wrap" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to look up the creation time and TTL of a given
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # response-wrapping token
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/wrapping/lookup" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow a token to unwrap a response-wrapping token. This is a convenience to
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # avoid client token swapping since this is also part of the response wrapping
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # policy.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/wrapping/unwrap" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow general purpose tools
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/tools/hash" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/tools/hash/*" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # Allow checking the status of a Control Group request if the user has the
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             # accessor
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             path "sys/control-group/request" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:                 capabilities = ["update"]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:             }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         EOT
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argo.data.vault_identity_group.admins[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_group" "admins" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_canonical_id[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_creation_time[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_last_update_time[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_merged_from_canonical_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_metadata[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_accessor[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_path[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_type[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name[0m[0m                      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcreation_time[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m                       = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m                      = "admins"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlast_update_time[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmodify_index[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argo.data.vault_identity_group.developers[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_group" "developers" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_canonical_id[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_creation_time[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_last_update_time[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_merged_from_canonical_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_metadata[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_accessor[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_path[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_type[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name[0m[0m                      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcreation_time[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m                       = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m                      = "developers"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlast_update_time[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmodify_index[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argo.data.vault_identity_oidc_client_creds.creds[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_oidc_client_creds" "creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_id[0m[0m     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_secret[0m[0m = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m          = "argo"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argo.vault_generic_secret.creds[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/oidc/argo"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argo.vault_identity_oidc_assignment.app[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_assignment" "app" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m      = "argo"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argo.vault_identity_oidc_client.app[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_client" "app" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maccess_token_ttl[0m[0m = 7200
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0massignments[0m[0m      = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"argo",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_id[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_secret[0m[0m    = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_type[0m[0m      = "confidential"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid_token_ttl[0m[0m     = 2400
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mkey[0m[0m              = "kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m             = "argo"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mredirect_uris[0m[0m    = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"https://argo.kubefirst.dev/oauth2/callback",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argocd.data.vault_identity_group.admins[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_group" "admins" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_canonical_id[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_creation_time[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_last_update_time[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_merged_from_canonical_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_metadata[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_accessor[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_path[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_type[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name[0m[0m                      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcreation_time[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m                       = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m                      = "admins"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlast_update_time[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmodify_index[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argocd.data.vault_identity_group.developers[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_group" "developers" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_canonical_id[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_creation_time[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_last_update_time[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_merged_from_canonical_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_metadata[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_accessor[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_path[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_type[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name[0m[0m                      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcreation_time[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m                       = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m                      = "developers"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlast_update_time[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmodify_index[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argocd.data.vault_identity_oidc_client_creds.creds[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_oidc_client_creds" "creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_id[0m[0m     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_secret[0m[0m = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m          = "argocd"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argocd.vault_generic_secret.creds[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/oidc/argocd"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argocd.vault_identity_oidc_assignment.app[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_assignment" "app" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m      = "argocd"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.argocd.vault_identity_oidc_client.app[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_client" "app" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maccess_token_ttl[0m[0m = 7200
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0massignments[0m[0m      = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"argocd",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_id[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_secret[0m[0m    = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_type[0m[0m      = "confidential"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid_token_ttl[0m[0m     = 2400
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mkey[0m[0m              = "kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m             = "argocd"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mredirect_uris[0m[0m    = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"https://argocd.kubefirst.dev/auth/callback",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.console.data.vault_identity_group.admins[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_group" "admins" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_canonical_id[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_creation_time[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_last_update_time[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_merged_from_canonical_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_metadata[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_accessor[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_path[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_type[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name[0m[0m                      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcreation_time[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m                       = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m                      = "admins"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlast_update_time[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmodify_index[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.console.data.vault_identity_group.developers[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_group" "developers" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_canonical_id[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_creation_time[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_last_update_time[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_merged_from_canonical_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_metadata[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_accessor[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_path[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_type[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name[0m[0m                      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcreation_time[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m                       = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m                      = "developers"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlast_update_time[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmodify_index[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.console.data.vault_identity_oidc_client_creds.creds[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_oidc_client_creds" "creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_id[0m[0m     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_secret[0m[0m = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m          = "console"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.console.vault_generic_secret.creds[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/oidc/console"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.console.vault_identity_oidc_assignment.app[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_assignment" "app" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m      = "console"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.console.vault_identity_oidc_client.app[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_client" "app" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maccess_token_ttl[0m[0m = 7200
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0massignments[0m[0m      = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"console",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_id[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_secret[0m[0m    = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_type[0m[0m      = "confidential"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid_token_ttl[0m[0m     = 2400
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mkey[0m[0m              = "kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m             = "console"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mredirect_uris[0m[0m    = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"https://vouch.kubefirst.dev/auth",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.gitlab.data.vault_identity_group.admins[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_group" "admins" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_canonical_id[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_creation_time[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_last_update_time[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_merged_from_canonical_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_metadata[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_accessor[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_path[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_type[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name[0m[0m                      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcreation_time[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m                       = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m                      = "admins"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlast_update_time[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmodify_index[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.gitlab.data.vault_identity_group.developers[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_group" "developers" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_canonical_id[0m[0m              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_creation_time[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_last_update_time[0m[0m          = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_merged_from_canonical_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_metadata[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_accessor[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_path[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_mount_type[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0malias_name[0m[0m                      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcreation_time[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m                       = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m                      = "developers"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlast_update_time[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmodify_index[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnamespace_id[0m[0m                    = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mparent_group_ids[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpolicies[0m[0m                        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mtype[0m[0m                            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.gitlab.data.vault_identity_oidc_client_creds.creds[0m will be read during apply[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   # (depends on a resource or a module with changes pending)[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m [36m<=[0m[0m data "vault_identity_oidc_client_creds" "creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_id[0m[0m     = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_secret[0m[0m = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m          = "gitlab"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.gitlab.vault_generic_secret.creds[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "creds" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "secret/oidc/gitlab"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.gitlab.vault_identity_oidc_assignment.app[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_assignment" "app" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m      = "gitlab"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.gitlab.vault_identity_oidc_client.app[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_oidc_client" "app" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0maccess_token_ttl[0m[0m = 7200
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0massignments[0m[0m      = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"gitlab",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_id[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_secret[0m[0m    = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mclient_type[0m[0m      = "confidential"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid_token_ttl[0m[0m     = 2400
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mkey[0m[0m              = "kubefirst"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m             = "gitlab"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mredirect_uris[0m[0m    = [
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"https://gitlab.kubefirst.dev/users/auth/openid_connect/callback",
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         ]
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mPlan:[0m 42 to add, 0 to change, 0 to destroy.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[0m[1mrandom_password.chartmuseum_password: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mrandom_password.chartmuseum_password: Creation complete after 0s [id=none][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_policy.admin: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_scope.profile_scope: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_policy.developer: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_key.key: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_auth_backend.userpass: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_mount.users: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_group.admins: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_mount.secret: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_scope.group_scope: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_policy.admin: Creation complete after 0s [id=admin][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_auth_backend.k8s: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_scope.profile_scope: Creation complete after 0s [id=identity/oidc/scope/profile][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_group.developers: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_group.admins: Creation complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_scope.email_scope: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_auth_backend.userpass: Creation complete after 0s [id=userpass][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_scope.user_scope: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_auth_backend.k8s: Creation complete after 0s [id=kubernetes/kubefirst][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_kubernetes_auth_backend_role.k8s_atlantis: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_policy.developer: Creation complete after 1s [id=developer][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_kubernetes_auth_backend_config.k8s: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_mount.users: Creation complete after 1s [id=users][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_kubernetes_auth_backend_role.k8s_external_secrets: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_mount.secret: Creation complete after 1s [id=secret][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.development_metaphor: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_group.developers: Creation complete after 1s [id=9d828c32-b5c7-8a31-7ddb-bd2fba4fd5de][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.external_secrets_token: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.chartmuseum_secrets: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_kubernetes_auth_backend_config.k8s: Creation complete after 0s [id=auth/kubernetes/kubefirst/config][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.minio_creds: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_kubernetes_auth_backend_role.k8s_atlantis: Creation complete after 1s [id=auth/kubernetes/kubefirst/role/atlantis][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_kubernetes_auth_backend_role.k8s_external_secrets: Creation complete after 0s [id=auth/kubernetes/kubefirst/role/external-secrets][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.staging_metaphor: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.docker_config: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_key.key: Creation complete after 1s [id=kubefirst][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.metaphor_deploy_token: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_scope.group_scope: Creation complete after 1s [id=identity/oidc/scope/groups][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.production_metaphor: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_scope.email_scope: Creation complete after 1s [id=identity/oidc/scope/email][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.ci_secrets: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_scope.user_scope: Creation complete after 1s [id=identity/oidc/scope/user][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.atlantis_ngrok_secrets: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.staging_metaphor: Creation complete after 0s [id=secret/staging/metaphor][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.atlantis_secrets: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.docker_config: Creation complete after 0s [id=secret/dockerconfigjson][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_provider.kubefirst: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.atlantis_ngrok_secrets: Creation complete after 0s [id=secret/atlantis-ngrok][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.gitlab_runner: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.ci_secrets: Creation complete after 0s [id=secret/ci-secrets][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.production_metaphor: Creation complete after 0s [id=secret/production/metaphor][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.metaphor_deploy_token: Creation complete after 0s [id=secret/deploy-tokens/metaphor][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.atlantis_secrets: Creation complete after 0s [id=secret/atlantis][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_oidc_provider.kubefirst: Creation complete after 0s [id=identity/oidc/provider/kubefirst][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.data.vault_identity_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.data.vault_identity_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.data.vault_identity_group.developers: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.data.vault_identity_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.data.vault_identity_group.developers: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.data.vault_identity_group.admins: Read complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.data.vault_identity_group.admins: Read complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.data.vault_identity_group.developers: Read complete after 0s [id=9d828c32-b5c7-8a31-7ddb-bd2fba4fd5de][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.data.vault_identity_group.admins: Read complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.data.vault_identity_group.developers: Read complete after 0s [id=9d828c32-b5c7-8a31-7ddb-bd2fba4fd5de][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.data.vault_identity_group.developers: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.data.vault_identity_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.data.vault_identity_group.developers: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.vault_identity_oidc_assignment.app: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.vault_identity_oidc_assignment.app: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.data.vault_identity_group.developers: Read complete after 0s [id=9d828c32-b5c7-8a31-7ddb-bd2fba4fd5de][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.data.vault_identity_group.developers: Read complete after 0s [id=9d828c32-b5c7-8a31-7ddb-bd2fba4fd5de][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.vault_identity_oidc_assignment.app: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.data.vault_identity_group.admins: Read complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.vault_identity_oidc_assignment.app: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.gitlab_runner: Creation complete after 0s [id=secret/gitlab-runner][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.vault_identity_oidc_assignment.app: Creation complete after 0s [id=identity/oidc/assignment/gitlab][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.vault_identity_oidc_assignment.app: Creation complete after 0s [id=identity/oidc/assignment/argocd][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.vault_identity_oidc_client.app: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.vault_identity_oidc_client.app: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.vault_identity_oidc_assignment.app: Creation complete after 0s [id=identity/oidc/assignment/argo][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.vault_identity_oidc_client.app: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.vault_identity_oidc_assignment.app: Creation complete after 0s [id=identity/oidc/assignment/console][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.vault_identity_oidc_client.app: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.chartmuseum_secrets: Creation complete after 0s [id=secret/chartmuseum][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.vault_identity_oidc_client.app: Creation complete after 0s [id=identity/oidc/client/argocd][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.data.vault_identity_oidc_client_creds.creds: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.data.vault_identity_oidc_client_creds.creds: Read complete after 0s [id=identity/oidc/client/argocd][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.vault_generic_secret.creds: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.minio_creds: Creation complete after 0s [id=secret/minio][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.development_metaphor: Creation complete after 0s [id=secret/development/metaphor][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_generic_secret.external_secrets_token: Creation complete after 1s [id=secret/external-secrets-store][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.vault_identity_oidc_client.app: Creation complete after 1s [id=identity/oidc/client/argo][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.data.vault_identity_oidc_client_creds.creds: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.data.vault_identity_oidc_client_creds.creds: Read complete after 0s [id=identity/oidc/client/argo][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.vault_generic_secret.creds: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argocd.vault_generic_secret.creds: Creation complete after 1s [id=secret/oidc/argocd][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.vault_identity_oidc_client.app: Creation complete after 1s [id=identity/oidc/client/gitlab][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.data.vault_identity_oidc_client_creds.creds: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.data.vault_identity_oidc_client_creds.creds: Read complete after 0s [id=identity/oidc/client/gitlab][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.vault_generic_secret.creds: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.argo.vault_generic_secret.creds: Creation complete after 0s [id=secret/oidc/argo][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.vault_identity_oidc_client.app: Creation complete after 1s [id=identity/oidc/client/console][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.data.vault_identity_oidc_client_creds.creds: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.data.vault_identity_oidc_client_creds.creds: Read complete after 0s [id=identity/oidc/client/console][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.vault_generic_secret.creds: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.gitlab.vault_generic_secret.creds: Creation complete after 0s [id=secret/oidc/gitlab][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.console.vault_generic_secret.creds: Creation complete after 0s [id=secret/oidc/console][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1m[32m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Apply complete! Resources: 42 added, 0 changed, 0 destroyed.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m
2023-04-05T09:57 INF cmd/k3d/create.go:1189 > vault terraform executed successfully
2023-04-05T09:57 INF cmd/k3d/create.go:1204 > applying users terraform
2023-04-05T09:57 INF pkg/shell.go:64 >  export GITLAB_TOKEN = **************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export GITLAB_OWNER = ************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_email_address = **************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_gitlab_token = **************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_vault_addr = *********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_vault_token = ****************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export VAULT_ADDR = *********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export VAULT_TOKEN = ****************************
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing modules...[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - admins in admins
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - admins.kbot in modules/user
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - developers in developers
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing the backend...[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[32m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Successfully configured the backend "s3"! Terraform will automatically
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: use this backend unless the backend configuration changes.[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mInitializing provider plugins...[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Finding latest version of hashicorp/vault...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Finding gitlabhq/gitlab versions matching "15.8.0"...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Finding latest version of hashicorp/random...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installing hashicorp/vault v3.14.0...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installed hashicorp/vault v3.14.0 (signed by HashiCorp)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installing gitlabhq/gitlab v15.8.0...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installed gitlabhq/gitlab v15.8.0 (self-signed, key ID [0m[1m0D47B7AB85F63F65[0m[0m)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installing hashicorp/random v3.4.3...
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: - Installed hashicorp/random v3.4.3 (signed by HashiCorp)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Partner and community providers are signed by their developers.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: If you'd like to know more about provider signing, you can read about it here:
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: https://www.terraform.io/docs/cli/plugins/signing.html
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: selections it made above. Include this file in your version control repository
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: so that Terraform can guarantee to make the same selections by default when
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: you run "terraform init" in the future.[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[32m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: You may now begin working with Terraform. Try running "terraform plan" to see
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: any changes that are required for your infrastructure. All Terraform commands
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: should now work.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: If you ever set or change modules or backend configuration for Terraform,
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: rerun this command to reinitialize your working directory. If you forget, other
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: commands will detect it and remind you to do so if necessary.[0m
2023-04-05T09:57 INF pkg/shell.go:64 >  export GITLAB_OWNER = ************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_email_address = **************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_gitlab_token = **************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_vault_addr = *********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export TF_VAR_vault_token = ****************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export VAULT_ADDR = *********************
2023-04-05T09:57 INF pkg/shell.go:64 >  export VAULT_TOKEN = ****************************
2023-04-05T09:57 INF pkg/shell.go:64 >  export GITLAB_TOKEN = **************************
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.data.vault_auth_backend.userpass: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.data.vault_identity_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.developers.data.vault_identity_group.developers: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.vault_auth_backend.userpass: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.vault_identity_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.vault_identity_group.developers: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.data.vault_identity_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.vault_auth_backend.userpass: Read complete after 0s [id=userpass][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.data.vault_identity_group.admins: Read complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.vault_identity_group.admins: Read complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.data.vault_identity_group.admins: Read complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.vault_identity_group.developers: Read complete after 0s [id=9d828c32-b5c7-8a31-7ddb-bd2fba4fd5de][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.developers.data.vault_identity_group.developers: Read complete after 0s [id=9d828c32-b5c7-8a31-7ddb-bd2fba4fd5de][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.data.vault_auth_backend.userpass: Read complete after 0s [id=userpass][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.data.gitlab_group.developers: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.gitlab_group.developers: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.data.gitlab_user.user: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.gitlab_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.data.gitlab_group.admins: Reading...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.data.gitlab_user.user: Read complete after 0s [id=13351461][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.gitlab_group.developers: Read complete after 0s [id=65980961][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mdata.gitlab_group.admins: Read complete after 0s [id=65980963][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.data.gitlab_group.developers: Read complete after 0s [id=65980961][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.data.gitlab_group.admins: Read complete after 1s [id=65980963][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform used the selected providers to generate the following execution
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: plan. Resource actions are indicated with the following symbols:
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:   [32m+[0m create
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Terraform will perform the following actions:
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # vault_identity_group_member_entity_ids.admins_membership[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_group_member_entity_ids" "admins_membership" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexclusive[0m[0m         = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_id[0m[0m          = "5318817d-92ea-3330-c934-e40ffe1f672f"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mgroup_name[0m[0m        = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmember_entity_ids[0m[0m = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.admins.module.kbot.random_password.password[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "random_password" "password" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mbcrypt_hash[0m[0m      = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlength[0m[0m           = 25
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mlower[0m[0m            = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmin_lower[0m[0m        = 0
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmin_numeric[0m[0m      = 0
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmin_special[0m[0m      = 0
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmin_upper[0m[0m        = 0
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnumber[0m[0m           = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mnumeric[0m[0m          = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0moverride_special[0m[0m = "!#$@"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mresult[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mspecial[0m[0m          = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mupper[0m[0m            = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.admins.module.kbot.vault_generic_endpoint.user[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_endpoint" "user" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m            = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_delete[0m[0m       = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m         = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mignore_absent_fields[0m[0m = true
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                 = "auth/userpass/users/kbot"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mwrite_data[0m[0m           = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mwrite_data_json[0m[0m      = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.admins.module.kbot.vault_generic_secret.user[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_generic_secret" "user" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata[0m[0m                = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdata_json[0m[0m           = (sensitive value)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdelete_all_versions[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisable_read[0m[0m        = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mpath[0m[0m                = "users/kbot"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.admins.module.kbot.vault_identity_entity.user[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_entity" "user" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mdisabled[0m[0m          = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mexternal_policies[0m[0m = false
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmetadata[0m[0m          = {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"email"      = "your@email.com"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"first_name" = "K"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:           [32m+[0m [0m"last_name"  = "Bot"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:         }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m              = "kbot"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [1m  # module.admins.module.kbot.vault_identity_entity_alias.user[0m will be created[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m  [32m+[0m[0m resource "vault_identity_entity_alias" "user" {
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mcanonical_id[0m[0m   = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mmount_accessor[0m[0m = "auth_userpass_92302bdc"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:       [32m+[0m [0m[1m[0mname[0m[0m           = "kbot"
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT:     }
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: 
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mPlan:[0m 6 to add, 0 to change, 0 to destroy.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[0m[1mmodule.admins.module.kbot.random_password.password: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.vault_identity_entity.user: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.random_password.password: Creation complete after 0s [id=none][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.vault_generic_secret.user: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.vault_generic_endpoint.user: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.vault_identity_entity.user: Creation complete after 0s [id=71a686f8-eed8-d8a9-c5a7-67a63568a6e9][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.vault_identity_entity_alias.user: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_group_member_entity_ids.admins_membership: Creating...[0m[0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.vault_identity_entity_alias.user: Creation complete after 0s [id=24d1e8f9-7bd5-68f7-01b6-11b84c4c0133][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.vault_generic_secret.user: Creation complete after 0s [id=users/kbot][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mvault_identity_group_member_entity_ids.admins_membership: Creation complete after 0s [id=5318817d-92ea-3330-c934-e40ffe1f672f][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1mmodule.admins.module.kbot.vault_generic_endpoint.user: Creation complete after 0s [id=auth/userpass/users/kbot][0m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m[1m[32m
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: Apply complete! Resources: 6 added, 0 changed, 0 destroyed.
2023-04-05T09:57 INF kubefirst/pkg/ExecShellWithVars/shell.go:89 > OUT: [0m
2023-04-05T09:57 INF cmd/k3d/create.go:1221 > executed users terraform successfully
2023-04-05T09:57 INF internal/gitClient/git.go:108 > committing initial detokenized gitops-template repo content post run
2023-04-05T09:57 INF internal/k8s/exec.go:171 > waiting for kubefirst-console Deployment to be created
2023-04-05T09:59 INF internal/k8s/exec.go:313 > waiting for kubefirst-console Deployment to be ready - this could take up to 120 seconds
2023-04-05T09:59 INF internal/k8s/exec.go:327 > all Pods in Deployment kubefirst-console are ready
LOG: 2023/04/05 09:59:27.420948 /Users/jared/git/kubefirst/github/kubefirst/internal/k8s/portForward.go:93: Namespace for PF kubefirst
LOG: 2023/04/05 09:59:27.421027 /Users/jared/git/kubefirst/github/kubefirst/internal/k8s/portForward.go:94: Name for PF kubefirst-console-7c47567d76-hwhc9
2023-04-05T09:59 INF internal/k8s/wrappers.go:63 > port forwarding is ready to get traffic
2023-04-05T09:59 INF internal/k8s/wrappers.go:66 > pod "kubefirst-console" at namespace "kubefirst" has port-forward accepting local connections at port 9094

2023-04-05T09:59 INF cmd/k3d/create.go:1307 > kubefirst installation complete
2023-04-05T09:59 INF cmd/k3d/create.go:1308 > welcome to your new kubefirst platform running in K3d
2023-04-05T09:59 INF pkg/helpers.go:37 > original domain name: kubefirst.dev
2023-04-05T09:59 INF pkg/helpers.go:43 > adjusted domain name:  kubefirst.dev
2023-04-05T10:11 INF kubefirst/cmd/k3d/runK3d/create.go:140 > error closing segment client the client was already closed
