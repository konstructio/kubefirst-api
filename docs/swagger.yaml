basePath: /api/v1
definitions:
  types.AWSAuth:
    properties:
      access_key_id:
        type: string
      secret_access_key:
        type: string
      session_token:
        type: string
    type: object
  types.AWSDomainValidateResponse:
    properties:
      validated:
        type: boolean
    type: object
  types.CivoAuth:
    properties:
      token:
        type: string
    type: object
  types.CivoDomainValidationRequest:
    properties:
      cloud_region:
        type: string
    type: object
  types.CivoDomainValidationResponse:
    properties:
      validated:
        type: boolean
    type: object
  types.CloudflareAuth:
    properties:
      api_token:
        type: string
      origin_ca_issuer_key:
        type: string
      token:
        description: 'DEPRECATED: please transition to APIToken'
        type: string
    type: object
  types.Cluster:
    properties:
      _id:
        type: string
      alerts_email:
        description: Identifiers
        type: string
      argocd_auth_token:
        type: string
      argocd_create_registry_check:
        type: boolean
      argocd_delete_registry_check:
        type: boolean
      argocd_initialize_check:
        type: boolean
      argocd_install_check:
        type: boolean
      argocd_password:
        type: string
      argocd_username:
        type: string
      atlantis_webhook_secret:
        type: string
      atlantis_webhook_url:
        type: string
      aws_account_id:
        description: kms
        type: string
      aws_auth:
        allOf:
        - $ref: '#/definitions/types.AWSAuth'
        description: Auth
      aws_kms_key_detokenized_check:
        type: boolean
      aws_kms_key_id:
        type: string
      civo_auth:
        $ref: '#/definitions/types.CivoAuth'
      cloud_provider:
        type: string
      cloud_region:
        type: string
      cloud_terraform_apply_check:
        type: boolean
      cloud_terraform_apply_failed_check:
        type: boolean
      cloudflare_auth:
        $ref: '#/definitions/types.CloudflareAuth'
      cluster_id:
        type: string
      cluster_name:
        type: string
      cluster_secrets_created_check:
        type: boolean
      cluster_type:
        type: string
      creation_timestamp:
        type: string
      dns_provider:
        type: string
      do_auth:
        $ref: '#/definitions/types.DigitaloceanAuth'
      domain_liveness_check:
        type: boolean
      domain_name:
        type: string
      ecr:
        description: Container Registry and Secrets
        type: boolean
      git_auth:
        $ref: '#/definitions/types.GitAuth'
      git_host:
        type: string
      git_init_check:
        type: boolean
      git_protocol:
        type: string
      git_provider:
        type: string
      git_terraform_apply_check:
        type: boolean
      gitlab_owner_group_id:
        type: integer
      gitops_pushed_check:
        type: boolean
      gitops_ready_check:
        type: boolean
      gitops_template_branch:
        type: string
      gitops_template_url:
        type: string
      google_auth:
        $ref: '#/definitions/types.GoogleAuth'
      in_progress:
        type: boolean
      install_tools_check:
        description: Checks
        type: boolean
      kbot_setup_check:
        type: boolean
      kubefirst_team:
        type: string
      last_condition:
        type: string
      node_count:
        type: string
      node_type:
        type: string
      state_store_create_check:
        type: boolean
      state_store_credentials:
        $ref: '#/definitions/types.StateStoreCredentials'
      state_store_creds_check:
        type: boolean
      state_store_details:
        $ref: '#/definitions/types.StateStoreDetails'
      status:
        description: Status
        type: string
      subdomain_name:
        type: string
      useTelemetry:
        description: Telemetry
        type: boolean
      users_terraform_apply_check:
        type: boolean
      vault_auth:
        $ref: '#/definitions/types.VaultAuth'
      vault_initialized_check:
        type: boolean
      vault_terraform_apply_check:
        type: boolean
      vultr_auth:
        $ref: '#/definitions/types.VultrAuth'
      workload_clusters:
        items:
          $ref: '#/definitions/types.WorkloadCluster'
        type: array
    required:
    - node_count
    - node_type
    type: object
  types.ClusterDefinition:
    properties:
      admin_email:
        description: Cluster
        type: string
      aws_auth:
        allOf:
        - $ref: '#/definitions/types.AWSAuth'
        description: Auth
      civo_auth:
        $ref: '#/definitions/types.CivoAuth'
      cloud_provider:
        enum:
        - aws
        - civo
        - digitalocean
        - vultr
        - google
        type: string
      cloud_region:
        type: string
      cloudflare_auth:
        $ref: '#/definitions/types.CloudflareAuth'
      cluster_name:
        type: string
      dns_provider:
        type: string
      do_auth:
        $ref: '#/definitions/types.DigitaloceanAuth'
      domain_name:
        type: string
      ecr:
        description: AWS
        type: boolean
      force_destroy:
        type: boolean
      git_auth:
        $ref: '#/definitions/types.GitAuth'
      git_protocol:
        enum:
        - ssh
        - https
        type: string
      git_provider:
        enum:
        - github
        - gitlab
        type: string
      gitops_template_branch:
        type: string
      gitops_template_url:
        description: Git
        type: string
      google_auth:
        $ref: '#/definitions/types.GoogleAuth'
      node_count:
        type: string
      node_type:
        type: string
      subdomain_name:
        type: string
      type:
        enum:
        - mgmt
        - workload
        type: string
      vultr_auth:
        $ref: '#/definitions/types.VultrAuth'
    required:
    - admin_email
    - cloud_provider
    - cloud_region
    - dns_provider
    - domain_name
    - git_protocol
    - git_provider
    - node_count
    - node_type
    - type
    type: object
  types.ClusterServiceList:
    properties:
      cluster_name:
        type: string
      services:
        items:
          $ref: '#/definitions/types.Service'
        type: array
    type: object
  types.DigitaloceanAuth:
    properties:
      spaces_key:
        type: string
      spaces_secret:
        type: string
      token:
        type: string
    type: object
  types.DomainListRequest:
    properties:
      aws_auth:
        $ref: '#/definitions/types.AWSAuth'
      civo_auth:
        $ref: '#/definitions/types.CivoAuth'
      cloud_region:
        type: string
      cloudflare_auth:
        $ref: '#/definitions/types.CloudflareAuth'
      do_auth:
        $ref: '#/definitions/types.DigitaloceanAuth'
      google_auth:
        $ref: '#/definitions/types.GoogleAuth'
      vultr_auth:
        $ref: '#/definitions/types.VultrAuth'
    type: object
  types.DomainListResponse:
    properties:
      domains:
        items:
          type: string
        type: array
    type: object
  types.Environment:
    properties:
      _id:
        type: string
      color:
        type: string
      creation_timestamp:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  types.GitAuth:
    properties:
      git_owner:
        type: string
      git_token:
        type: string
      git_username:
        type: string
      private_key:
        type: string
      public_key:
        type: string
      public_keys:
        type: string
    type: object
  types.GitopsCatalogApp:
    properties:
      categories:
        items:
          type: string
        type: array
      description:
        type: string
      display_name:
        type: string
      image_url:
        type: string
      name:
        type: string
      secret_keys:
        items:
          $ref: '#/definitions/types.GitopsCatalogAppSecretKey'
        type: array
    type: object
  types.GitopsCatalogAppCreateRequest:
    properties:
      secret_keys:
        items:
          $ref: '#/definitions/types.GitopsCatalogAppSecretKey'
        type: array
    type: object
  types.GitopsCatalogAppSecretKey:
    properties:
      label:
        type: string
      name:
        type: string
      value:
        type: string
    type: object
  types.GitopsCatalogApps:
    properties:
      apps:
        items:
          $ref: '#/definitions/types.GitopsCatalogApp'
        type: array
      name:
        type: string
    type: object
  types.GoogleAuth:
    properties:
      key_file:
        type: string
      project_id:
        type: string
    type: object
  types.JSONFailureResponse:
    properties:
      error:
        example: err
        type: string
    type: object
  types.JSONHealthResponse:
    properties:
      status:
        example: healthy
        type: string
    type: object
  types.JSONSuccessResponse:
    properties:
      message:
        example: success
        type: string
    type: object
  types.RegionListRequest:
    properties:
      aws_auth:
        $ref: '#/definitions/types.AWSAuth'
      civo_auth:
        $ref: '#/definitions/types.CivoAuth'
      cloud_region:
        type: string
      do_auth:
        $ref: '#/definitions/types.DigitaloceanAuth'
      google_auth:
        $ref: '#/definitions/types.GoogleAuth'
      vultr_auth:
        $ref: '#/definitions/types.VultrAuth'
    type: object
  types.RegionListResponse:
    properties:
      regions:
        items:
          type: string
        type: array
    type: object
  types.Service:
    properties:
      default:
        type: boolean
      description:
        type: string
      image:
        type: string
      links:
        items:
          type: string
        type: array
      name:
        type: string
      status:
        type: string
    type: object
  types.StateStoreCredentials:
    properties:
      access_key_id:
        type: string
      id:
        type: string
      name:
        type: string
      secret_access_key:
        type: string
      session_token:
        type: string
    type: object
  types.StateStoreDetails:
    properties:
      aws_artifacts_bucket:
        type: string
      aws_state_store_bucket:
        type: string
      hostname:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  types.TelemetryRequest:
    properties:
      event:
        type: string
    type: object
  types.VaultAuth:
    properties:
      kbot_password:
        type: string
      root_token:
        type: string
    type: object
  types.VultrAuth:
    properties:
      token:
        type: string
    type: object
  types.WorkloadCluster:
    properties:
      admin_email:
        type: string
      cloud_provider:
        type: string
      cloud_region:
        type: string
      cluster_id:
        type: string
      cluster_name:
        type: string
      cluster_type:
        type: string
      creation_timestamp:
        type: string
      dns_provider:
        type: string
      domain_name:
        type: string
      environment:
        $ref: '#/definitions/types.Environment'
      git_auth:
        $ref: '#/definitions/types.GitAuth'
      instance_size:
        type: string
      node_count:
        type: integer
      node_type:
        type: string
      status:
        type: string
    type: object
host: localhost:port
info:
  contact:
    email: help@kubefirst.io
    name: Kubefirst
  description: Kubefirst API
  title: Kubefirst API
  version: "1.0"
paths:
  /aws/domain/validate/:domain:
    get:
      consumes:
      - application/json
      description: Returns status of whether or not an AWS hosted zone is validated
        for use with Kubefirst
      parameters:
      - description: Domain name, no trailing dot
        in: path
        name: domain
        required: true
        type: string
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.AWSDomainValidateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Returns status of whether or not an AWS hosted zone is validated for
        use with Kubefirst
      tags:
      - aws
  /civo/domain/validate/:domain:
    get:
      consumes:
      - application/json
      description: Returns status of whether or not a Civo hosted zone is validated
        for use with Kubefirst
      parameters:
      - description: Domain name, no trailing dot
        in: path
        name: domain
        required: true
        type: string
      - description: Domain validation request in JSON format
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/types.CivoDomainValidationRequest'
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CivoDomainValidationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Returns status of whether or not a Civo hosted zone is validated for
        use with Kubefirst
      tags:
      - civo
  /cluster:
    get:
      consumes:
      - application/json
      description: Return all known configured Kubefirst clusters
      parameters:
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Cluster'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Return all known configured Kubefirst clusters
      tags:
      - cluster
  /cluster/:cluster_name:
    delete:
      consumes:
      - application/json
      description: Delete a Kubefirst cluster
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Delete a Kubefirst cluster
      tags:
      - cluster
    get:
      consumes:
      - application/json
      description: Return a configured Kubefirst cluster
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Return a configured Kubefirst cluster
      tags:
      - cluster
    post:
      consumes:
      - application/json
      description: Create a Kubefirst cluster
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - description: Cluster create request in JSON format
        in: body
        name: definition
        required: true
        schema:
          $ref: '#/definitions/types.ClusterDefinition'
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Create a Kubefirst cluster
      tags:
      - cluster
  /cluster/:cluster_name/export:
    post:
      consumes:
      - application/json
      description: Export a Kubefirst cluster database entry
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Export a Kubefirst cluster database entry
      tags:
      - cluster
  /cluster/:cluster_name/reset_progress:
    post:
      consumes:
      - application/json
      description: Remove a cluster progress marker from a cluster entry
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Remove a cluster progress marker from a cluster entry
      tags:
      - cluster
  /cluster/import:
    post:
      consumes:
      - application/json
      description: Import a Kubefirst cluster database entry
      parameters:
      - description: Cluster import request in JSON format
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/types.Cluster'
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Import a Kubefirst cluster database entry
      tags:
      - cluster
  /domain/:cloud_provider:
    post:
      consumes:
      - application/json
      description: Return a list of registered domains/hosted zones for a cloud provider
        account
      parameters:
      - description: Domain list request in JSON format
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.DomainListRequest'
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DomainListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Return a list of registered domains/hosted zones for a cloud provider
        account
      tags:
      - domain
  /gitops-catalog/apps:
    get:
      consumes:
      - application/json
      description: Returns a list of available Kubefirst gitops catalog applications
      parameters:
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GitopsCatalogApps'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Returns a list of available Kubefirst gitops catalog applications
      tags:
      - gitops-catalog
  /gitops-catalog/apps/update:
    get:
      consumes:
      - application/json
      description: Updates the list of available Kubefirst gitops catalog applications
      parameters:
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Updates the list of available Kubefirst gitops catalog applications
      tags:
      - gitops-catalog
  /health:
    get:
      description: Return health status if the application is running.
      parameters:
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.JSONHealthResponse'
      summary: Return health status if the application is running.
      tags:
      - health
  /region/:cloud_provider:
    post:
      consumes:
      - application/json
      description: Return a list of regions for a cloud provider account
      parameters:
      - description: Region list request in JSON format
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.RegionListRequest'
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.RegionListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Return a list of regions for a cloud provider account
      tags:
      - region
  /services/:cluster_name:
    get:
      consumes:
      - application/json
      description: Returns a list of services for a cluster
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ClusterServiceList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Returns a list of services for a cluster
      tags:
      - services
  /services/:cluster_name/:service_name:
    delete:
      consumes:
      - application/json
      description: Remove a gitops catalog application from a cluster
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - description: Service name to be removed
        in: path
        name: service_name
        required: true
        type: string
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Remove a gitops catalog application from a cluster
      tags:
      - services
    post:
      consumes:
      - application/json
      description: Add a gitops catalog application to a cluster as a service
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - description: Service name to be added
        in: path
        name: service_name
        required: true
        type: string
      - description: Service create request in JSON format
        in: body
        name: definition
        required: true
        schema:
          $ref: '#/definitions/types.GitopsCatalogAppCreateRequest'
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.JSONFailureResponse'
      summary: Add a gitops catalog application to a cluster as a service
      tags:
      - services
  /stream:
    get:
      description: Stream API server logs
      parameters:
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      responses: {}
      summary: Stream API server logs
      tags:
      - logs
  /telemetry/:cluster_name:
    post:
      consumes:
      - application/json
      description: Create a Telemetry Event
      parameters:
      - description: Cluster name
        in: path
        name: cluster_name
        required: true
        type: string
      - description: event request in JSON format
        in: body
        name: definition
        required: true
        schema:
          $ref: '#/definitions/types.TelemetryRequest'
      - default: Bearer <API key>
        description: API key
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/types.JSONSuccessResponse'
      summary: Create a Telemetry Event
      tags:
      - telemetry
swagger: "2.0"
